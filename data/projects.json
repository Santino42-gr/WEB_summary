{
  "projects": [
    {
      "id": 1,
      "title": "Face-Swap Bot для \"Новые Люди\"",
      "subtitle": "Viral маркетинг инструмент с ИИ",
      "description": "Telegram-бот для создания стикер-паков с технологией face-swap. Позволяет пользователям накладывать свои лица на политические мемы. Полная разработка за 4 дня с архитектурой на Node.js и интеграцией с Piapi AI.",
      "technologies": ["Node.js", "Piapi AI", "Telegram Bot API", "Docker", "Face-Swap AI"],
      "features": [
        "Автоматическое создание стикер-паков",
        "Интеграция с Telegram Bot API",
        "Face-swap технология через Piapi AI",
        "Viral распространение контента"
      ],
      "metrics": [
        "10,000+ строк кода",
        "50+ пользователей за 24 часа", 
        "300+ стикер-паков создано",
        "4 дня полной разработки"
      ],
      "github": "https://github.com/aironlab/face-swap-bot",
      "demo": "https://t.me/NewPeopleStickers_bot",
      "image": "/images/face-swap-preview.jpg",
      "featured": true,
      "status": "completed",
      "startDate": "2024-11-01",
      "endDate": "2024-11-05",
      "detailedDescription": "Инновационный Telegram-бот, использующий передовую технологию face-swap для создания персонализированных стикер-паков. Разработан как viral маркетинговый инструмент для политической партии «Новые Люди». Бот автоматически обрабатывает загруженные пользователем фотографии, применяет алгоритмы замены лиц и генерирует готовые к использованию стикеры.",
      "achievements": [
        "Завершена разработка за 4 дня",
        "50+ активных пользователей в первые 24 часа",
        "300+ уникальных стикер-паков создано",
        "Полная автоматизация процесса создания стикеров",
        "Интеграция с Telegram Bot API для seamless UX"
      ],
      "challenges": [
        "Оптимизация алгоритмов face-swap для реального времени",
        "Обеспечение качества генерируемых стикеров",
        "Масштабирование под viral нагрузку",
        "Интеграция с Piapi AI API"
      ]
    },
    {
      "id": 2,
      "title": "Нейро-Юрист с Mistral API",
      "subtitle": "ИИ для автоматизации юридических консультаций",
      "description": "Интеллектуальная система юридических консультаций на базе Mistral API с RAG архитектурой. Автоматизирует первичные консультации граждан, анализ документов и предоставление правовых рекомендаций с использованием Function Calling.",
      "technologies": ["Mistral API", "RAG Architecture", "Function Calling", "Vector Database", "Python", "FastAPI"],
      "features": [
        "Первичные юридические консультации",
        "Анализ правовых документов", 
        "RAG поиск по правовой базе",
        "Function Calling для структурированных ответов"
      ],
      "metrics": [
        "Интеграция с Mistral API",
        "Автоматизация консультаций",
        "Анализ юридических документов",
        "Правовая база знаний"
      ],
      "github": "https://github.com/aironlab/mistral-lawyer",
      "demo": "https://t.me/New_people_help_bot",
      "image": "/images/mistral-lawyer-preview.jpg",
      "featured": true,
      "status": "completed",
      "startDate": "2024-09-15",
      "endDate": "2024-11-20",
      "detailedDescription": "Продвинутая система искусственного интеллекта для автоматизации юридических консультаций. Использует Mistral API в связке с RAG-архитектурой для анализа правовых документов и предоставления квалифицированных консультаций. Система способна обрабатывать сложные юридические запросы и предоставлять персонализированные рекомендации.",
      "achievements": [
        "95% процессов автоматизировано",
        "100+ успешных консультаций проведено",
        "24/7 доступность юридической помощи",
        "Интеграция с базой российского законодательства",
        "Function Calling для сложного анализа документов"
      ],
      "challenges": [
        "Обеспечение юридической точности ответов",
        "Интеграция актуального законодательства",
        "Обработка сложных правовых кейсов",
        "Соблюдение конфиденциальности клиентов"
      ]
    },
    {
      "id": 3,
      "title": "MCP Server для YClients",
      "subtitle": "Нейро-администратор для салонов красоты",
      "description": "Model Context Protocol (MCP) сервер для интеграции Claude AI с YClients API. Автоматизирует запись клиентов, управление расписанием и обработку заявок через ИИ-ассистента. Полная интеграция с CRM системой салонов красоты.",
      "technologies": ["MCP Protocol", "YClients API", "Claude Integration", "Node.js", "TypeScript", "SSE"],
      "features": [
        "Интеграция Claude с YClients API",
        "Автоматическая запись клиентов",
        "Управление расписанием через ИИ",
        "Server-Sent Events для real-time"
      ],
      "metrics": [
        "Полная автоматизация записи",
        "Интеграция с CRM системой",
        "Model Context Protocol",
        "Real-time синхронизация"
      ],
      "github": "https://github.com/aironlab/yclients-mcp",
      "demo": "https://tlgg.ru/@OunouStudio_bot",
      "image": "/images/yclients-mcp-preview.jpg",
      "featured": true,
      "status": "completed",
      "startDate": "2024-12-01",
      "endDate": "2024-12-15",
      "detailedDescription": "Революционное решение для автоматизации салонов красоты и сферы услуг. MCP Server выступает как нейро-администратор, способный полностью автономно обрабатывать записи клиентов через YClients API. Система использует Claude для понимания естественного языка клиентов и автоматического перевода запросов в действия в CRM-системе.",
      "achievements": [
        "100% автоматизация процесса записи",
        "24/7 работа без человеческого вмешательства",
        "0 ошибок в обработке записей",
        "Интеграция с YClients CRM",
        "Поддержка естественного языка общения"
      ],
      "challenges": [
        "Разработка протокола MCP с нуля",
        "Интеграция с YClients API",
        "Обеспечение надежности 24/7",
        "Обработка сложных временных слотов"
      ]
    },
    {
      "id": 4,
      "title": "Multiagent Development Team",
      "subtitle": "Автономная команда из 7 ИИ-агентов",
      "description": "Революционная система разработки с командой из 7 специализированных ИИ-агентов: Project Manager, AI Developer, Frontend/Backend разработчики, Design Agent, Design Review Agent и QA. Оркестрация через Claude Code и MCP Servers с 5x ускорением разработки.",
      "technologies": ["Claude Code", "Cursor AI", "MCP Servers", "AI Orchestration", "Multi-Agent Systems", "Prompt Engineering"],
      "features": [
        "7 специализированных ИИ-агентов",
        "Автономное управление проектами",
        "AI Code Review и QA",
        "Интеграция с Cursor AI"
      ],
      "metrics": [
        "7 специализированных агентов",
        "5x ускорение разработки",
        "10,000+ строк кода",
        "Автономная координация"
      ],
      "github": "https://github.com/aironlab/multiagent-team",
      "demo": null,
      "image": "/images/multiagent-preview.jpg",
      "featured": true,
      "status": "in_progress",
      "startDate": "2024-10-01",
      "endDate": null,
      "detailedDescription": "Инновационная система оркестрации ИИ-агентов для автономной разработки программного обеспечения. Команда состоит из 7 специализированных агентов: Project Manager, AI Developer, Backend Developer, Frontend Developer, Design Agent, Design Review Agent и QA Developer. Каждый агент имеет четко определенные роли и способен автономно выполнять свои задачи.",
      "achievements": [
        "5x ускорение процесса разработки",
        "10,000+ строк качественного кода",
        "Автономная координация между агентами",
        "Полный цикл разработки от идеи до продакшена",
        "Интеграция с современными инструментами разработки"
      ],
      "challenges": [
        "Координация работы 7 независимых агентов",
        "Обеспечение качества кода",
        "Синхронизация задач между агентами",
        "Масштабирование команды под разные проекты"
      ]
    },
    {
      "id": 5,
      "title": "RAG-системы для бизнеса",
      "subtitle": "Интеллектуальные боты для CRM и продаж",
      "description": "Комплексные RAG-системы для автоматизации бизнес-процессов: интеграция с Битрикс24 CRM, создание чат-ботов для сайтов и Авито, автоматизация работы с leads. Vector Embeddings для точного поиска по базе знаний компании.",
      "technologies": ["Vector Embeddings", "Битрикс24 API", "Knowledge Base", "RAG Architecture", "CRM Integration", "OpenAI"],
      "features": [
        "Интеграция с Битрикс24 CRM",
        "Автоматизация leads обработки",
        "Чат-боты для сайта и Авито",
        "Vector поиск по базе знаний"
      ],
      "metrics": [
        "95% автоматизации в RAG проектах",
        "База знаний компании",
        "CRM интеграция",
        "Автоматизация leads"
      ],
      "github": "https://github.com/aironlab/business-rag",
      "demo": "https://tula.optimal-buh.ru/",
      "avitoUrl": "https://www.avito.ru/brands/ae5ddf0749830ba18034bd0718d19c4f?src=sharing",
      "image": "/images/business-rag-preview.jpg",
      "featured": false,
      "status": "completed",
      "startDate": "2024-06-01",
      "endDate": "2024-09-30",
      "detailedDescription": "Комплексная RAG-система для автоматизации бизнес-процессов бухгалтерской компании. Включает в себя интеграцию с сайтом компании, Авито и Битрикс24 CRM. Система автоматически обрабатывает запросы клиентов, предоставляет консультации по бухгалтерским услугам и направляет leads в CRM для дальнейшей обработки.",
      "achievements": [
        "Создана полная база знаний компании",
        "Автоматизация обработки leads с сайта и Авито",
        "95% точность в ответах на бухгалтерские вопросы",
        "Интеграция с Битрикс24 CRM",
        "24/7 консультационная поддержка клиентов"
      ],
      "challenges": [
        "Интеграция с множественными платформами",
        "Обеспечение точности бухгалтерских консультаций",
        "Синхронизация с CRM в реальном времени",
        "Обработка сложных налоговых вопросов"
      ]
    }
  ],
  "categories": [
    "AI & Machine Learning",
    "Data Analytics", 
    "Web Development",
    "Automation",
    "Natural Language Processing"
  ],
  "technologies": [
    "Python",
    "JavaScript",
    "React", 
    "Node.js",
    "TensorFlow",
    "PyTorch",
    "LangChain",
    "OpenAI API",
    "Docker",
    "Kubernetes",
    "PostgreSQL",
    "MongoDB",
    "Redis",
    "Elasticsearch"
  ]
}
